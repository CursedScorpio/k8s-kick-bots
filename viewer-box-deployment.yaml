apiVersion: apps/v1
kind: Deployment
metadata:
  name: viewer-deployment
  namespace: stream-viewers
  labels:
    app: stream-viewer
    component: viewer
spec:
  replicas: 3
  selector:
    matchLabels:
      app: stream-viewer
      component: viewer
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: stream-viewer
        component: viewer
      annotations:
        memory.alpha.kubernetes.io/unbounded: "true"
    spec:
      nodeSelector:
        node-role.kubernetes.io/control-plane: "false"
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      terminationGracePeriodSeconds: 3600  # Keeping high grace period as requested
      initContainers:
      - name: setup-vpn-auth
        image: busybox
        command: 
        - sh
        - -c
        - "mkdir -p /mnt/etc/openvpn && cp /mnt/vpn-auth/auth.txt /mnt/etc/openvpn/ && chmod 600 /mnt/etc/openvpn/auth.txt && echo 'VPN auth file prepared'"
        volumeMounts:
        - name: vpn-auth
          mountPath: /mnt/vpn-auth
        - name: etc-openvpn
          mountPath: /mnt/etc/openvpn
      - name: setup-system
        image: busybox
        command: 
        - sh
        - -c
        - "echo 'System optimization' && echo 3 > /proc/sys/vm/drop_caches && echo 1 > /proc/sys/vm/compact_memory || true"
        securityContext:
          privileged: true
      - name: increase-system-limits
        image: busybox
        command:
        - sh
        - -c
        - |
          echo "Increasing system limits..."
          ulimit -n 65535 || echo "Failed to set ulimit -n"
          sysctl -w vm.max_map_count=262144 || echo "Failed to set vm.max_map_count"
          echo "System limits updated."
        securityContext:
          privileged: true
      containers:
      - name: viewer-box
        image: your-registry/viewer-box:latest
        imagePullPolicy: Always
        env:
        - name: BOX_NAME
          value: "box-1"
        - name: NUM_BROWSERS
          value: "2"
        - name: CONTEXTS_PER_BROWSER
          value: "8" 
        - name: TABS_PER_CONTEXT
          value: "8"
        - name: STREAM_URL
          value: "https://kick.com/example_channel"
        - name: VPN_CONFIG
          value: "vpn1"
        - name: FINGERPRINT_SERVICE
          value: "http://fingerprint-service:3001"
        - name: NODE_OPTIONS
          value: "--max-old-space-size=16384"
        ports:
        - containerPort: 3000
          name: http
        resources:
          requests:
            memory: "4Gi"
            cpu: "1000m"
          limits:
            memory: "16Gi" 
            cpu: "4000m"
        securityContext:
          privileged: true
        volumeMounts:
        - name: screenshots
          mountPath: /screenshots
        - name: vpn-configs
          mountPath: /vpn
        - name: etc-openvpn
          mountPath: /etc/openvpn
        - name: logs
          mountPath: /logs
        - name: shm-volume 
          mountPath: /dev/shm
        - name: tmp-volume
          mountPath: /tmp
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - |
                echo "Starting graceful shutdown..."
                # Kill Chrome/Chromium processes first
                for pid in $(pgrep -f "chrome|chromium"); do
                  kill -TERM $pid 2>/dev/null || true
                done
                sleep 2
                # Kill any remaining Chrome/Chromium processes
                for pid in $(pgrep -f "chrome|chromium"); do
                  kill -KILL $pid 2>/dev/null || true
                done
                # Kill OpenVPN processes
                for pid in $(pgrep -f "openvpn"); do
                  kill -TERM $pid 2>/dev/null || true
                done
                sleep 2
                # Kill any remaining OpenVPN processes
                for pid in $(pgrep -f "openvpn"); do
                  kill -KILL $pid 2>/dev/null || true
                done
                # Clean up any remaining processes
                pkill -KILL -f "chrome|chromium|openvpn" 2>/dev/null || true
                echo "Shutdown complete"
      volumes:
      - name: screenshots
        hostPath:
          path: /path/to/screenshots
          type: DirectoryOrCreate
      - name: logs
        hostPath:
          path: /path/to/logs
          type: DirectoryOrCreate
      - name: vpn-configs
        configMap:
          name: vpn-configs
      - name: vpn-auth
        configMap:
          name: vpn-auth-config
      - name: etc-openvpn
        emptyDir: {}
      - name: shm-volume
        emptyDir:
          medium: Memory
          sizeLimit: 12Gi
      - name: tmp-volume
        emptyDir:
          medium: Memory
          sizeLimit: 4Gi
---
apiVersion: v1
kind: Service
metadata:
  name: viewer-service
  namespace: stream-viewers
  labels:
    app: stream-viewer
    component: viewer
spec:
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: stream-viewer
    component: viewer
  type: ClusterIP